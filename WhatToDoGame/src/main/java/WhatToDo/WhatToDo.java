package WhatToDo;//package cyoa_a;import java.awt.Menu;import java.util.Scanner;public class WhatToDo {	public static void main(String[] args) {				Scanner keys = new Scanner(System.in);				boolean action = true;				int itemCount = 1;				int candleKey = 1;		int ladderKey = 0;		int tarpKey = 0;		int matchKey = 0;		int ashesKey = 0;		int branchKey = 0;		int monkeyKey = 0;				Location current = new Location();		Inventory items = new Inventory();				System.out.println("You wake up alone and lost in the woods at night."				+ "\nCommands: (o)bserve your surroundings; (a)ction [such as pick up, use, enter, etc.]; \nhead (n)orth, (e)ast, (s)outh, or (w)est;"				+ "\n(i)tem list; (c)ommand list; or press a number key to use that item.");				while(action) {				String input = keys.nextLine();				if(input.equals("c")) {			System.out.println("Commands: (o)bserve your surroundings; (a)ction [such as pick up, use, enter, etc.]; \nhead (n)orth, (e)ast, (s)outh, or (w)est;"				+ "\n(i)tem list; (c)ommand list; or press a number key to use that item.");		}				if(input.equals("o")) {			current.observe();		}				if(input.equals("n")) {			current.north();		}				if(input.equals("e")) {			current.east();		}				if(input.equals("s")) {						current.south();					}				if(input.equals("w")) {			current.west();		}				if(input.equals("a")) {			current.action();		}				if(input.equals("i")) {						System.out.println("You are currently holding: ");			items.displayItems();					}				if(input.equals((Integer.toString(candleKey)))) {			if (candle) {				if(mansion) {					System.out.println("You put the candle in the glass lamp on the lonely table.");					candle = false;					useCandle = true;					if(ladderKey>candleKey) {						ladderKey--;					}					if(tarpKey>candleKey) {						tarpKey--;					}					if(matchKey>candleKey) {						matchKey--;					}					if(branchKey>candleKey) {						branchKey--;					}					itemCount --;					candleKey = 0;				}				else {					System.out.println("The candle does not seem useful at the moment.");				}			}		}				else if(input.equals((Integer.toString(ladderKey)))) {			if(ladder) {				if(deepWoods) {					System.out.println("You stand the ladder up below the hanging tarp.");					ladder = false;					useLadder = true;					if(matchKey>ladderKey) {						matchKey--;					}					if(branchKey>ladderKey) {						branchKey--;					}					itemCount --;					ladderKey = 0;				}				else {					System.out.println("The ladder does not seem useful in this place.");				}			}		}				else if(input.equals((Integer.toString(tarpKey)))) {			if(tarp) {				if(shore) {					if(useBranch) {					System.out.println("You tie the tarp around the fake mast and fashion a passable sail.");					tarp = false;					useTarp = true;					if(matchKey>tarpKey) {						matchKey--;					}					itemCount --;					tarpKey = 0;					}					else {						System.out.println("The tarp might make a nice sail if it could be fastened to a mast.");					}				}				else {					System.out.println("The tarp does not seem especially useful right now.");				}			}		}				else if(input.equals((Integer.toString(matchKey)))) {			if (match) {				if(mansion) {					if(useCandle) {					System.out.println("You strike the match against its box and light the candle in the lamp.");					System.out.println("Strange shadows dance around the room and a faint yawn echoes through the halls.");					match = false;					useMatch = true;					awake = true;					if(ladderKey>matchKey) {						ladderKey--;					}					if(tarpKey>matchKey) {						tarpKey--;					}					if(branchKey>matchKey) {						branchKey--;					}					itemCount --;					matchKey = 0;				}				}				else {					System.out.println("You probably should not waste your only match just yet.");				}			}		}				else if(input.equals((Integer.toString(ashesKey)))) {			if(ashes) {			if (grotto) {				if(waterBlock) {					System.out.println("You try filling the empty pouch with your pile of ashes and it perfectly balances out the set of scales.");					System.out.println("A slot on the base opens up and a large, ornate key slides out.");					ashes = false;					useAshes = true;					key = true;					if(matchKey>ashesKey) {						matchKey--;					}					if(branchKey>ashesKey) {						branchKey--;					}					itemCount --;					ashesKey = 0;				}			}				else {					System.out.println("You might want to hold on to the ashes for now.");				}		}		}				else if(input.equals((Integer.toString(branchKey)))) {			if(branch) {			if (shore) {				System.out.println("The branch looks like it could be an appropriate mast for a boat of this size.");				System.out.println("You fix it to the base with surprising ease.");					branch = false;					useBranch = true;					if(ladderKey>branchKey) {						ladderKey--;					}					if(tarpKey>branchKey) {						tarpKey--;					}					if(matchKey>branchKey) {						matchKey--;					}					if(ashesKey>branchKey) {						ashesKey--;					}					if(monkeyKey>branchKey) {						monkeyKey--;					}					itemCount --;					branchKey = 0;				}			else if (deepWoods) {				if(tarpRemains) {				System.out.println("You try to get the tarp down with the branch, but it clings too securely to the trees.");				}			}			else {				System.out.println("Hmm. It might be unwise to use your only good branch like this.");				}			}		}				else if(input.equals((Integer.toString(monkeyKey)))) {			if(monkey) {			if (southCliffs) {					System.out.println("The monkey acts as a wrench and easily closes the stone gate.");					System.out.println("It waves goodbye and bounds back into the forest as the river waters cease to flow.");					monkey = false;					useMonkey = true;					waterBlock = true;					if(matchKey>monkeyKey) {						matchKey--;					}					if(ashesKey>monkeyKey) {						ashesKey--;					}					if(branchKey>monkeyKey) {						branchKey--;					}					itemCount --;					monkeyKey = 0;				}				else {					System.out.println("The monkey is not interested in what you're trying to do here.");				}			}			}		}	}}